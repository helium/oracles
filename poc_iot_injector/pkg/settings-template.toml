
# log settings for the application (RUST_LOG format). Default below
#
# log = "poc-iot-injector=debug,poc_store=info"

#file to load keypair from
#
keypair = "/path/to/key_pair"

# Trigger interval in seconds. (Default is 1800; 30 minutes)
#
# trigger = 1800

# Submission offset in seconds. (Default is 600; 5 minutes)
#
# submission_offset = 600

# Last PoC submission timestamp in seconds since unix epoch. (Default is unix epoch)
#
# last_poc_submission = 0

# Whether to do txn submission to mainnet
#
do_submission = true

# Number of witnesses allowed per receipt
#
# max_witnesses_per_receipt = 14

# max lookback age for the injector when loading files from s3 ( in seconds )
#
max_lookback_age = 3600

# max txns to submit per minute
#
max_txns_per_min = 2000

[database]

# Url for database to write indexed rewards to
url = "postgres://postgres:postgres@127.0.0.1:5432/poc_iot_injector_db"

# Max connections to the database. Default below
#
# max_connections = 10

[transactions]

# Local grpc url to node follower for rewards tracking and submission
#[serde(with = "http_serde::uri", default = "default_url")]
# url = http://127.0.0.1:8080

# Start block to start streaming followed transactions from.
block = 0

# Connect timeout for follower in seconds. Default 5
# connect = 5

# RPC timeout for follower in seconds. Default 5
# rpc = 5

# batch size for gateway stream results. Default 100
# batch = 100

# Optionally provide multiple submission_urls (for poc-injector) like so:
# [[transactions.submission_urls]]
# url = "http://127.0.0.1:8083"
# [[transactions.submission_urls]]
# url = "http://127.0.0.1:8084"

[verifier]

# Input bucket details for verified reports

# Name of bucket to access verified data. Required
#
bucket = "mainnet-verified-bucket"

# Region for bucket. Defaults to below
#
# region = "us-west-2"

# Optional URL for AWS api endpoint. Inferred from aws config settings or aws
# IAM context by default
#
# endpoint = "https://aws-s3-bucket.aws.com"

[metrics]

# Endpoint for metrics. Default below
#
# endpoint = "127.0.0.1:19000"
