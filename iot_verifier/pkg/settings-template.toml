
# log settings for the application (RUST_LOG format). Default below
#
# log = "iot-verifier=debug,poc_store=info"

# Cache location for generated verified reports; Required
#
cache = "/var/data/iot-verified"

# Denylist url
#
# denylist_url = "https://api.github.com/repos/helium/denylist/releases/latest"

# Default beacon interval ( 6 hours) (in seconds)
beacon_interval = 21600

# Default beacon interval tolerance ( 10 minutes) (in seconds)
beacon_interval_tolerance = 600

# window width for the  poc report loader ( in seconds )
# NOTE: the window width should be as a minimum equal to the ingestor roll up period
#       any less and the verifier will potentially miss incoming reports
poc_loader_window_width = 300

# cadence for how often to look for poc reports from s3 buckets ( in seconds )
# in normal operational mode the poll time should be set same as that of the window width
# however, if for example we are loading historic data, ie looking back 24hours, we will want
# the loader to be catching up as quickly as possible and so we will want to poll more often
# in order to iterate quickly over the historic data
# the average time it takes to load the data available within the window width needs to be
# considered here, the poll time should be at least equal to that plus some percentage
# if in doubt, keep this same value as poc_loader_window_width
poc_loader_poll_time = 300

# max window age for the entropy and poc report loader ( in seconds )
# the starting point of the window will never be older than NOW - max_age
loader_window_max_lookback_age = 3600

# the lifespan of a piece of entropy ( in seconds )
entropy_lifespan = 180

# File store poll interval for incoming entropy reports, in seconds
entropy_interval = 300

[database]

# Postgres Connection Information
url = "postgres://postgres:postgres@127.0.0.1:5432/iot_verifier"

# Max connections to the database.
max_connections = 400

[follower]

# Local grpc url to node follower for rewards tracking and submission
#[serde(with = "http_serde::uri", default = "default_url")]
# url = http://127.0.0.1:8080

# Start block to start streaming followed transactions from.
block = 0

# Connect timeout for follower in seconds. Default 5
# connect = 5

# RPC timeout for follower in seconds. Default 5
# rpc = 5

# batch size for gateway stream results. Default 100
# batch = 100

[ingest]

# Input bucket details for ingest data

# Name of bucket to access ingest data. Required
#
bucket = "mainnet-ingest-bucket"

# Region for bucket. Defaults to below
#
# region = "us-west-2"

# Optional URL for AWS api endpoint. Inferred from aws config settings or aws
# IAM context by default
#
# endpoint = "https://aws-s3-bucket.aws.com"


[entropy]

# Input bucket details for entropy data

# Name of bucket to access entropy data. Required
#
bucket = "mainnet-entropy-bucket"

# Region for bucket. Defaults to below
#
# region = "us-west-2"

# Optional URL for AWS api endpoint. Inferred from aws config settings or aws
# IAM context by default
#
# endpoint = "https://aws-s3-bucket.aws.com"

[output]
# Output bucket for verified reports

# Name of bucket to write details to. Required
#
bucket = "mainnet-verified-bucket"

# Region for bucket. Defaults to below
#
# region = "us-west-2"

# Optional URL for AWS api endpoint. Inferred from aws config settings or aws
# IAM context by default
#
# endpoint = "https://aws-s3-bucket.aws.com"

[metrics]

# Endpoint for metrics. Default below
#
# endpoint = "127.0.0.1:19000"
