version: "2.4"
services:

  iot-config:
    image: iot-config:latest
    build:
      context: .
      dockerfile: iot_config.Dockerfile
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    environment:
      CFG_DATABASE_URL: postgres://postgres:postgres@postgres:5432/config_db
      CFG_LISTEN: 0.0.0.0:8080
      CFG_METRICS_ENDPOINT: 0.0.0.0:19000
      CFG_NETWORK: mainnet
      CFG_LOG: info

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DBS: >
        config_db
        helius_db
        mobile_index_db
        iot_index_db
        mobile_verified_db
        iot_verified_db
      PGDATA: /data
    ports:
      - "5432:5432"
    entrypoint:
      - /bin/bash
      - -c
      - |
        for db in $${POSTGRES_DBS[@]}
        do
            cat > /docker-entrypoint-initdb.d/$${db}-setup.sql <<EOF
            create database $$db
                with
                owner = $$POSTGRES_USER
                encoding = 'UTF8'
                lc_collate = 'en_US.utf8'
                lc_ctype = 'en_US.utf8'
                tablespace = pg_default
                connection limit = -1;
        EOF
        done
        docker-entrypoint.sh postgres -c log_statement=all
    volumes:
      - db-data:/data
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: oracleadmin
      MINIO_ROOT_PASSWORD: oracleadmin
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - bucket-data:/data
    command: server /data --console-address ":9090"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
  minio-setup:
    image: minio/mc:latest
    depends_on:
      - minio
    environment:
      MINIO_ROOT_USER: oracleadmin
      MINIO_ROOT_PASSWORD: oracleadmin
      MINIO_BUCKETS: >
        mobile-ingest
        iot-ingest
        iot-entropy
        mobile-verified
        iot-verified
        mobile-index
        iot-index
      ORACLE_ID: oraclesecretid
      ORACLE_KEY: oraclesecretkey
    entrypoint:
      - /bin/bash
      - -c
      - |
        cat > /bucket-policy.json <<EOF
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "ListObjectsInBucket",
                    "Effect": "Allow",
                    "Action": ["s3:ListBucket"],
                    "Resource": ["arn:aws:s3:::*"]
                },
                {
                    "Sid": "AllObjectActions",
                    "Effect": "Allow",
                    "Action": "s3:*Object",
                    "Resource": ["arn:aws:s3:::*"]
                }
            ]
        }
        EOF
        sleep 2
        /usr/bin/mc alias set localminio http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD}
        for bucket in $${MINIO_BUCKETS[@]}
        do
            if ! /usr/bin/mc ls localminio/$${bucket} > /dev/null 2>&1 ; then
                echo "creating bucket $${bucket}"
                /usr/bin/mc mb localminio/$${bucket}
            fi
        done
        /usr/bin/mc admin policy add localminio fullaccess /bucket-policy.json
        /usr/bin/mc admin user add localminio $${ORACLE_ID} $${ORACLE_KEY}
        /usr/bin/mc admin policy set localminio fullaccess user=$${ORACLE_ID}

volumes:
  bucket-data:
  db-data:
