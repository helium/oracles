name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
    tags: [ '*' ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true
          components: clippy, rustfmt

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Check formatting
        run: cargo fmt  -- --check

      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -Dclippy::all

      - name: Build
        run: cargo build --all --release

      - name: PackageIngestorServer
        id: build_ingestor
        if: contains(github.ref, 'refs/tags/')
        uses: novalabsxyz/cargo-deb-amd64-ubuntu@v2.0
        with:
          cmd: cargo deb -p poc-ingest

      - name: PackageRewardsServer
        id: build_rewards
        if: contains(github.ref, 'refs/tags/')
        uses: novalabsxyz/cargo-deb-amd64-ubuntu@v2.0
        with:
          cmd: cargo deb -p mobile-rewards

      - name: PackageStatusServer
        id: build_status
        if: contains(github.ref, 'refs/tags/')
        uses: novalabsxyz/cargo-deb-amd64-ubuntu@v2.0
        with:
          cmd: cargo deb -p poc5g-status

      - name: PackageEntropyServer
        id: build_entropy
        if: contains(github.ref, 'refs/tags/')
        uses: novalabsxyz/cargo-deb-amd64-ubuntu@v2.0
        with:
          cmd: cargo deb -p poc-entropy


      - name: PackagecloudUpload
        if: contains(github.ref, 'refs/tags/') && steps.build_ingestor.outcome == 'success' && steps.build_rewards.outcome == 'success' && steps.build_status.outcome == 'success' && steps.build_entropy.outcome == 'success'
        env:
          PACKAGECLOUD_API_KEY: ${{ secrets.PACKAGECLOUD_API_KEY }}
        run: |
          chmod +x ./.github/scripts/packagecloud_upload.sh
          ./.github/scripts/packagecloud_upload.sh
