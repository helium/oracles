name: TESTS

on:
  pull_request:
    branches: [main]
  push:
    branches: ["*"]
    tags: ["*"]

env:
  CARGO_INCREMENTAL: 0 # this setting is automatically applied by rust-cache but documented here for explicitness
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10

jobs:

  build:
    runs-on: oracles-20.04
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}-build
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust install
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --all --release

  fmt:
    needs: build
    runs-on: oracles-20.04
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}-fmt
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rust install
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install protoc
        run: sudo apt-get install -y protobuf-compiler

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Check formatting
        run: cargo fmt  -- --check
